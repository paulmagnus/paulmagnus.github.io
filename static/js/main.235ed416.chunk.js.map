{"version":3,"sources":["IdentifierPhoto.tsx","Color.ts","Widget.tsx","IconLink.tsx","Home.tsx","Logo.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["IdentifierPhoto","avatarStyle","this","props","AvatarStyle","Circle","clothingType","clothingColor","eyeType","mouthType","containerClass","center","className","style","topType","accessoriesType","hairColor","facialHairType","clotheType","clotheColor","eyebrowType","skinColor","Component","TextColorClass","color","Widget","BorderColorClass","titleClassName","date","Card","id","Title","title","children","IconLink","colorClass","icon","href","text","Home","Container","Subtitle","Footer","faHospital","faGraduationCap","faGithub","faFilePdf","faFile","faGlobeEurope","width","autoPlay","loop","src","type","faEnvelope","listItem","faLinkedin","Logo","App","Navbar","bg","variant","to","Brand","Collapse","Text","Nav","Link","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.235ed416.chunk.js","sourcesContent":["import React, { ReactNode, Component } from 'react';\r\nimport Avatar, { AvatarStyle } from 'avataaars';\r\nimport './IdentifierPhoto.scss';\r\n\r\ntype ClothingType = \"BlazerShirt\" | \"CollarSweater\" | \"GraphicShirt\" | \"Hoodie\" | \"Overall\" | \"ShirtCrewNeck\" | \"ShirtScoopNeck\" | \"ShirtVNeck\";\r\ntype ClothingColor = \"Black\" | \"Blue01\" | \"Blue02\" | \"Blue03\" | \"Gray01\" | \"Gray02\" | \"Heather\" | \"PastelBlue\" | \"PastelGreen\" | \"PastelOrange\" | \"PastelRed\" | \"PastelYellow\" | \"Pink\" | \"Red\" | \"White\";\r\ntype EyeType = \"Close\" | \"Cry\" | \"Default\" | \"Dizzy\" | \"EyeRoll\" | \"Happy\" | \"Hearts\" | \"Side\" | \"Squint\" | \"Surprised\" | \"Wink\" | \"WinkWacky\";\r\ntype MouthType = \"Concerned\" | \"Default\" | \"Disbelief\" | \"Eating\" | \"Grimace\" | \"Sad\" | \"ScreamOpen\" | \"Serious\" | \"Smile\" | \"Tongue\" | \"Twinkle\" | \"Vomit\";\r\n\r\nexport interface IIdentifierPhotoProps {\r\n    style?: React.CSSProperties;\r\n    avatarStyle?: AvatarStyle;\r\n    clothingType?: ClothingType;\r\n    clothingColor?: ClothingColor;\r\n    eyeType?: EyeType;\r\n    mouthType?: MouthType;\r\n    center?: boolean;\r\n}\r\n\r\nexport default class IdentifierPhoto extends Component<IIdentifierPhotoProps> {\r\n    render(): ReactNode {\r\n        const avatarStyle: AvatarStyle = this.props.avatarStyle || AvatarStyle.Circle;\r\n        const clothingType: ClothingType = this.props.clothingType || \"ShirtCrewNeck\";\r\n        const clothingColor: ClothingColor = this.props.clothingColor || \"Red\";\r\n        const eyeType: EyeType = this.props.eyeType || \"Default\";\r\n        const mouthType: MouthType = this.props.mouthType || \"Smile\";\r\n\r\n        const containerClass: string = this.props.center ? \"centerPhoto\" : \"\";\r\n\r\n        return (\r\n            <div className={containerClass}>\r\n                <Avatar\r\n                    style={this.props.style}\r\n                    avatarStyle={avatarStyle}\r\n                    topType=\"ShortHairShortRound\"\r\n                    accessoriesType=\"Prescription02\"\r\n                    hairColor=\"Brown\"\r\n                    facialHairType=\"Blank\"\r\n                    clotheType={clothingType}\r\n                    clotheColor={clothingColor}\r\n                    eyeType={eyeType}\r\n                    eyebrowType=\"DefaultNatural\"\r\n                    mouthType={mouthType}\r\n                    skinColor=\"Light\"\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}","export type Color = \"primary\" | \"secondary\" | \"success\" | \"danger\" | \"warning\" | \"info\" | \"light\" | \"dark\" | \"white\" | \"epic-red\" | \"linkedIn-blue\" | \"gitHub-green\" | \"hamilton-blue\" | \"ait-green\";\r\nexport type TextColor = Color | \"muted\";\r\n\r\nexport function TextColorClass(color: TextColor): string {\r\n    return `text-${color}`;\r\n}\r\n\r\nexport function BackgroundColorClass(color: Color): string {\r\n    return `bg-${color}`;\r\n}\r\n\r\nexport function BorderColorClass(color: Color): string {\r\n    return `border-${color}`;\r\n}","import React from 'react';\r\nimport {\r\n    Card\r\n} from 'react-bootstrap';\r\nimport './Widget.scss';\r\nimport { Color, BorderColorClass, TextColorClass } from './Color';\r\n\r\ninterface IWidgetProps {\r\n    children?: React.ReactNode;\r\n    title: string;\r\n    color?: Color;\r\n    id?: string;\r\n    date?: string;\r\n}\r\n\r\nexport default function Widget(props: IWidgetProps): React.ReactElement {\r\n    const color: Color = props.color || \"primary\";\r\n    const className: string = `widget ${BorderColorClass(color)}`;\r\n    const titleClassName: string = TextColorClass(color);\r\n    const date: string = props.date || \"\";\r\n\r\n    return (\r\n        <Card id={props.id} className={className}>\r\n            <div className=\"widget-header\">\r\n            <Card.Title className={titleClassName}>{props.title}</Card.Title>\r\n            <span className={TextColorClass(\"muted\")}>{date}</span>\r\n            </div>\r\n            {props.children}\r\n        </Card>\r\n    );\r\n}","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Color, TextColorClass } from './Color';\r\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\r\nimport './IconLink.scss';\r\n\r\ninterface IIconLinkProps {\r\n    color?: Color;\r\n    icon: IconProp;\r\n    href?: string;\r\n    text: string;\r\n}\r\n\r\nexport default function IconLink(props: IIconLinkProps): React.ReactElement {\r\n    const colorClass: string = props.color != null ? TextColorClass(props.color) : \"\";\r\n    const className: string = `linkIcon ${colorClass}`;\r\n\r\n    return (\r\n        <span className=\"iconLink\">\r\n            <FontAwesomeIcon icon={props.icon} className={className} />\r\n            <a href={props.href}>{props.text}</a>\r\n        </span>\r\n    )\r\n}","import React from 'react';\r\nimport {\r\n    Container, Card, ProgressBar\r\n} from 'react-bootstrap';\r\nimport IdentifierPhoto from './IdentifierPhoto';\r\nimport Widget from './Widget';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faEnvelope, faHospital, faGraduationCap, faGlobeEurope } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faLinkedin, faGithub } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faFilePdf, faFile } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { TextColorClass } from './Color';\r\nimport IconLink from './IconLink';\r\n\r\nexport default function Home(): React.ReactElement {\r\n    return (\r\n        <Container className=\"_content\">\r\n            <section id=\"introduction\">\r\n                <div id=\"mainPhoto\">\r\n                    <IdentifierPhoto center />\r\n                </div>\r\n                <p id=\"description\">\r\n                    Hi! I'm Paul Magnus. I am a full-stack developer at Epic Systems where I develop patient flow and discharge planning tools for hospitals around the US and\r\n                    the world.\r\n                </p>\r\n            </section>\r\n\r\n            <section>\r\n                <Widget id=\"epic\" title=\"Epic\" color=\"epic-red\" date=\"2019 - Present\" >\r\n                    <Card.Subtitle>Software Developer</Card.Subtitle>\r\n                    I am a full stack developer working on tools to help hospitals improve patient movement and discharge planning. I lead design and development for full stack projects\r\n                    involving database, web server, and front-end client code. I am a leading developer in the overhaul of Epic's core patient movement workflows for transfer and discharge.\r\n                    <Card.Footer>\r\n                        <IconLink icon={faHospital} color=\"epic-red\" href=\"https://www.epic.com\" text=\"epic.com\" />\r\n                    </Card.Footer>\r\n                </Widget>\r\n\r\n                <div className=\"projectList\">\r\n                    <Widget title=\"Patient Flow\" color=\"epic-red\">\r\n                        I work on Epic's core patient flow workflows: Admission, Transfer, Leave of Absence, and Discharge. I am a leading developer on Epic's overhaul of these tools into\r\n                        a web-based framework.\r\n                    </Widget>\r\n\r\n                    <Widget title=\"Discharge Planning\" color=\"epic-red\">\r\n                        I work on tools to help hospitals track the plan for a patient's discharge from the hospital.\r\n                        These tools help ensure that patients avoid spending unnecessary time in the hospital.\r\n                    </Widget>\r\n                </div>\r\n            </section>\r\n\r\n            <section>\r\n                <Widget title=\"Hamilton College\" color=\"hamilton-blue\" date=\"2014 - 2018\">\r\n                    <Card.Subtitle>Computer Science and Mathematics</Card.Subtitle>\r\n                    I studied computer science and mathematics at Hamilton College and worked as a teaching assistant for the computer science department. I worked on a summer research project\r\n                    at the college where I lead development of a strongly-typed dialect of Python and a Python graphics package which was used the following year in the introductory computer\r\n                    science classes. In my senior year, I developed an extension to Python that allows for Bash-style scripting called PyShell.\r\n                    <Card.Footer>\r\n                        <IconLink icon={faGraduationCap} color=\"hamilton-blue\" href=\"https://www.hamilton.edu\" text=\"hamilton.com\" />\r\n                    </Card.Footer>\r\n                </Widget>\r\n\r\n                <div className=\"projectList\">\r\n                    <Widget title=\"PyShell\" color=\"hamilton-blue\" date=\"2018\">\r\n                        PyShell is a superset of the Python programming language that allows for Bash-style scripting directly within a Python program.\r\n                        This was my senior project as a computer science student at Hamilton College.\r\n                        <Card.Footer>\r\n                            <IconLink icon={faGithub} color=\"gitHub-green\" href=\"https://github.com/paulmagnus/pyshell\" text=\"GitHub\" />\r\n                            <IconLink icon={faFilePdf} href=\"/pdf/PyShell_Paper.pdf\" text=\"Documentation\" />\r\n                        </Card.Footer>\r\n                    </Widget>\r\n\r\n                    <Widget title=\"CSPy\" color=\"hamilton-blue\" date=\"2017\">\r\n                        CSPy is a statically-typed dialect of Python. This language was developed for use in the introductory computer science courses at Hamilton College.\r\n                        <Card.Footer>\r\n                            <IconLink icon={faGithub} color=\"gitHub-green\" href=\"https://github.com/paulmagnus/CSPy\" text=\"GitHub\" />\r\n                            <IconLink icon={faFilePdf} href=\"/pdf/CSPy-general.pdf\" text=\"User Documentation\" />\r\n                            <IconLink icon={faFilePdf} href=\"/pdf/CSPy-developer.pdf\" text=\"Developer Documenation\" />\r\n                        </Card.Footer>\r\n                    </Widget>\r\n\r\n                    <Widget title=\"Python Graphics Package\" color=\"hamilton-blue\" date=\"2017\">\r\n                        This python graphics package was used as the graphics framework for the introductory computer science courses at Hamilton College.\r\n                        <Card.Footer>\r\n                            <IconLink icon={faGithub} color=\"gitHub-green\" href=\"https://github.com/paulmagnus/cs110graphics\" text=\"GitHub\" />\r\n                            <IconLink icon={faFile} href=\"https://www.pauljmagnus.com/cs110graphics/html/index.html\" text=\"Documenation\" />\r\n                        </Card.Footer>\r\n                    </Widget>\r\n\r\n                    <Widget title=\"Space Invaders AI\" color=\"hamilton-blue\" date=\"2017\">\r\n                        A machine learning system using genetic programming for playing Space Invaders.\r\n                        <Card.Footer>\r\n                            <IconLink icon={faGithub} color=\"gitHub-green\" href=\"https://github.com/paulmagnus/GP-Semester-Project\" text=\"GitHub\" />\r\n                        </Card.Footer>\r\n                    </Widget>\r\n                </div>\r\n            </section>\r\n\r\n            <section>\r\n                <Widget title=\"Acquincum Institute of Technology\" color=\"ait-green\" date=\"2016\">\r\n                    I studies abroad in Budapest, Hungary for a semester. I studied computer graphics, computer vision, and cryptography.\r\n                    <Card.Footer>\r\n                        <IconLink icon={faGlobeEurope} color=\"ait-green\" href=\"https://www.ait-budapest.com/\" text=\"ait-budapest.com\" />\r\n                    </Card.Footer>\r\n                </Widget>\r\n\r\n                <div className=\"projectList\">\r\n                    <Widget title=\"2D Space Game\" color=\"ait-green\" date=\"2016\">\r\n                        A simple space game built with C++ and OpenGL.\r\n                        <div className=\"projectVideo\">\r\n                            <video width=\"100%\" autoPlay loop>\r\n                                <source src=\"/video/Space_Game.mp4\" type=\"video/mp4\" />\r\n                            </video>\r\n                        </div>\r\n                    </Widget>\r\n\r\n                    <Widget title=\"Flight Simulator\" color=\"ait-green\" date=\"2016\">\r\n                        Simple flight simulator in 3D built with C++ and OpenGL.\r\n                        <div className=\"projectVideo\">\r\n                            <video width=\"100%\" autoPlay loop>\r\n                                <source src=\"/video/Flight_Sim.mp4\" type=\"video/mp4\" />\r\n                            </video>\r\n                        </div>\r\n                    </Widget>\r\n                </div>\r\n            </section>\r\n\r\n            <Widget id=\"contact\" title=\"Contact\">\r\n                <ul className=\"fa-ul\">\r\n                    <li>\r\n                        <FontAwesomeIcon icon={faEnvelope} listItem className={TextColorClass(\"dark\")} />\r\n                        <a href=\"mailto:pauljmagnus@gmail.com\">pauljmagnus@gmail.com</a>\r\n                    </li>\r\n                    <li>\r\n                        <FontAwesomeIcon icon={faLinkedin} listItem className={TextColorClass(\"linkedIn-blue\")} />\r\n                        <a href=\"https://www.linkedin.com/in/paul-magnus/\">paul-magnus</a>\r\n                    </li>\r\n                    <li>\r\n                        <FontAwesomeIcon icon={faGithub} listItem className={TextColorClass(\"gitHub-green\")} />\r\n                        <a href=\"https://github.com/paulmagnus/\">paulmagnus</a>\r\n                    </li>\r\n                </ul>\r\n            </Widget>\r\n        </Container>\r\n    );\r\n}","import React from 'react';\r\nimport './Logo.scss';\r\n\r\nexport default function Logo(): React.ReactElement {\r\n    return (\r\n        <div className=\"logoContainer\">\r\n            <img\r\n                src=\"/favicon-32x32.png\"\r\n            />\r\n        </div>\r\n    );\r\n}","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport { LinkContainer } from 'react-router-bootstrap';\nimport {\n  Navbar, Nav\n} from 'react-bootstrap';\nimport \"./App.scss\";\nimport Home from './Home';\nimport Logo from \"./Logo\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEnvelope } from \"@fortawesome/free-solid-svg-icons\";\nimport { faLinkedin, faGithub } from \"@fortawesome/free-brands-svg-icons\";\n\nexport default function App(): React.ReactElement {\n  return (\n    <div>\n      <Navbar bg=\"primary\" variant=\"dark\">\n        <LinkContainer to=\"/\">\n          <Navbar.Brand id=\"brand\">\n            <Logo />\n            <h1>\n              Paul J Magnus\n            </h1>\n          </Navbar.Brand>\n        </LinkContainer>\n        <Navbar.Collapse className=\"justify-content-end\">\n          <Navbar.Text id=\"contact-nav\">\n            <Nav.Link href=\"mailto:pauljmagnus@gmail.com\">\n              <FontAwesomeIcon icon={faEnvelope} />\n            </Nav.Link>\n            <Nav.Link href=\"https://www.linkedin.com/in/paul-magnus/\">\n              <FontAwesomeIcon icon={faLinkedin} />\n            </Nav.Link>\n            <Nav.Link href=\"https://github.com/paulmagnus\">\n              <FontAwesomeIcon icon={faGithub} />\n            </Nav.Link>\n          </Navbar.Text>\n        </Navbar.Collapse>\n      </Navbar>\n\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </div>\n  )\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.scss';\nimport './Colors.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}